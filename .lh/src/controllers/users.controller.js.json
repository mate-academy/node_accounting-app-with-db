{
    "sourceFile": "src/controllers/users.controller.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1718790011917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718790056801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,14 @@\n const userService = require('../services/users.service');\n \n const getAllUsers = async (_req, res) => {\n-  const users = await userService.getUsers();\n+  try {\n+    const users = await userService.getUsers();\n \n-  res.send(users);\n+    res.send(users);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n };\n \n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718790093821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,14 +11,16 @@\n };\n \n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n-  const user = await userService.getUser(+id);\n-\n-  if (user) {\n-    res.send(user);\n-  } else {\n-    res.sendStatus(404);\n+  try {\n+    const user = await userService.getUser(+id);\n+    \n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n   }\n };\n \n const addUser = async (req, res) => {\n"
                },
                {
                    "date": 1718790201289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,14 +13,16 @@\n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n   try {\n     const user = await userService.getUser(+id);\n-    \n+\n     if (user) {\n       res.send(user);\n     } else {\n       res.sendStatus(404);\n     }\n+  } catch (error) {\n+    res.status(400).send(error.message);\n   }\n };\n \n const addUser = async (req, res) => {\n@@ -41,12 +43,12 @@\n \n   try {\n     const user = userService.updateUser(+id, userData);\n \n-    if (!user) {\n+    if (user) {\n+      return;\n+    } else {\n       res.sendStatus(404);\n-\n-      return;\n     }\n \n     res.send(user);\n   } catch (error) {\n"
                },
                {
                    "date": 1718790218312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+const userService = require('../services/users.service');\n+\n+const getAllUsers = async (_req, res) => {\n+  try {\n+    const users = await userService.getUsers();\n+\n+    res.send(users);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const getOneUser = async (req, res) => {\n+  const { id } = req.params;\n+  try {\n+    const user = await userService.getUser(+id);\n+\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const addUser = async (req, res) => {\n+  const userData = req.body;\n+\n+  try {\n+    const user = await userService.addUser(userData);\n+\n+    res.status(201).send(user);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const updateUser = (req, res) => {\n+  const { id } = req.params;\n+  const userData = req.body;\n+\n+  try {\n+    const user = userService.updateUser(+id, userData);\n+\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+\n+    res.send(user);\n+  } catch (error) {\n+    res.statusMessage(error.message).sendStatus(400);\n+  }\n+};\n+\n+const deleteUser = (req, res) => {\n+  const { id } = req.params;\n+\n+  const didDelete = userService.deleteUser(+id);\n+\n+  if (didDelete) {\n+    res.sendStatus(204);\n+  } else {\n+    res.sendStatus(404);\n+  }\n+};\n+\n+module.exports = {\n+  getAllUsers,\n+  getOneUser,\n+  addUser,\n+  deleteUser,\n+  updateUser,\n+};\n"
                },
                {
                    "date": 1718790249489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,92 +48,13 @@\n       res.send(user);\n     } else {\n       res.sendStatus(404);\n     }\n-\n-    res.send(user);\n   } catch (error) {\n-    res.statusMessage(error.message).sendStatus(400);\n-  }\n-};\n-\n-const deleteUser = (req, res) => {\n-  const { id } = req.params;\n-\n-  const didDelete = userService.deleteUser(+id);\n-\n-  if (didDelete) {\n-    res.sendStatus(204);\n-  } else {\n-    res.sendStatus(404);\n-  }\n-};\n-\n-module.exports = {\n-  getAllUsers,\n-  getOneUser,\n-  addUser,\n-  deleteUser,\n-  updateUser,\n-};\n-const userService = require('../services/users.service');\n-\n-const getAllUsers = async (_req, res) => {\n-  try {\n-    const users = await userService.getUsers();\n-\n-    res.send(users);\n-  } catch (error) {\n     res.status(400).send(error.message);\n   }\n };\n \n-const getOneUser = async (req, res) => {\n-  const { id } = req.params;\n-  try {\n-    const user = await userService.getUser(+id);\n-\n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n-\n-const addUser = async (req, res) => {\n-  const userData = req.body;\n-\n-  try {\n-    const user = await userService.addUser(userData);\n-\n-    res.status(201).send(user);\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n-\n-const updateUser = (req, res) => {\n-  const { id } = req.params;\n-  const userData = req.body;\n-\n-  try {\n-    const user = userService.updateUser(+id, userData);\n-\n-    if (user) {\n-      return;\n-    } else {\n-      res.sendStatus(404);\n-    }\n-\n-    res.send(user);\n-  } catch (error) {\n-    res.statusMessage(error.message).sendStatus(400);\n-  }\n-};\n-\n const deleteUser = (req, res) => {\n   const { id } = req.params;\n \n   const didDelete = userService.deleteUser(+id);\n"
                },
                {
                    "date": 1718790319584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,17 +53,21 @@\n     res.status(400).send(error.message);\n   }\n };\n \n-const deleteUser = (req, res) => {\n+const deleteUser = async (req, res) => {\n   const { id } = req.params;\n \n-  const didDelete = userService.deleteUser(+id);\n+  try {\n+    const didDelete = await userService.deleteUser(+id);\n \n-  if (didDelete) {\n-    res.sendStatus(204);\n-  } else {\n-    res.sendStatus(404);\n+    if (didDelete) {\n+      res.sendStatus(204);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (error) {\n+    res.status(404).send(error.message);\n   }\n };\n \n module.exports = {\n"
                },
                {
                    "date": 1718790343278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n };\n \n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n+\n   try {\n     const user = await userService.getUser(+id);\n \n     if (user) {\n"
                },
                {
                    "date": 1718793135148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,14 @@\n     res.status(400).send(error.message);\n   }\n };\n \n-const updateUser = (req, res) => {\n+const updateUser = async (req, res) => {\n   const { id } = req.params;\n   const userData = req.body;\n \n   try {\n-    const user = userService.updateUser(+id, userData);\n+    const user = await userService.updateUser(+id, userData);\n \n     if (user) {\n       res.send(user);\n     } else {\n"
                },
                {
                    "date": 1718794872253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,80 +1,72 @@\n-const userService = require('../services/users.service');\n+const usersService = require('../services/users.service');\n \n-const getAllUsers = async (_req, res) => {\n-  try {\n-    const users = await userService.getUsers();\n+const getAllUsers = async (req, res) => {\n+  const users = await usersService.getUsers();\n \n-    res.send(users);\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n+  res.send(users);\n };\n \n-const getOneUser = async (req, res) => {\n+const getUserById = async (req, res) => {\n   const { id } = req.params;\n+  const user = await usersService.getUser(id);\n \n-  try {\n-    const user = await userService.getUser(+id);\n+  if (!user) {\n+    res.sendStatus(404);\n \n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (error) {\n-    res.status(400).send(error.message);\n+    return;\n   }\n+\n+  res.status(200).send(user);\n };\n \n-const addUser = async (req, res) => {\n-  const userData = req.body;\n+const createNewUser = async (req, res) => {\n+  const { name } = req.body;\n \n-  try {\n-    const user = await userService.addUser(userData);\n+  if (!name) {\n+    res.sendStatus(400);\n \n-    res.status(201).send(user);\n-  } catch (error) {\n-    res.status(400).send(error.message);\n+    return;\n   }\n+\n+  const newUser = await usersService.createUser(name);\n+\n+  res.status(201).send(newUser);\n };\n \n-const updateUser = async (req, res) => {\n+const updateUserById = async (req, res) => {\n   const { id } = req.params;\n-  const userData = req.body;\n+  const { name } = req.body;\n+  const user = await usersService.getUser(id);\n \n-  try {\n-    const user = await userService.updateUser(+id, userData);\n+  if (!user) {\n+    res.sendStatus(404);\n \n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (error) {\n-    res.status(400).send(error.message);\n+    return;\n   }\n+\n+  const updatedUser = await usersService.updateUser({ id, name });\n+\n+  res.status(200).send(updatedUser);\n };\n \n-const deleteUser = async (req, res) => {\n+const deleteUserById = async (req, res) => {\n   const { id } = req.params;\n+  const user = await usersService.getUser(id);\n \n-  try {\n-    const didDelete = await userService.deleteUser(+id);\n+  if (!user) {\n+    res.sendStatus(404);\n \n-    if (didDelete) {\n-      res.sendStatus(204);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (error) {\n-    res.status(404).send(error.message);\n+    return;\n   }\n+\n+  usersService.deleteUser(user.id);\n+  res.sendStatus(204);\n };\n \n module.exports = {\n   getAllUsers,\n-  getOneUser,\n-  addUser,\n-  deleteUser,\n-  updateUser,\n+  getUserById,\n+  createNewUser,\n+  updateUserById,\n+  deleteUserById,\n };\n"
                },
                {
                    "date": 1718795120233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n   res.send(users);\n };\n \n-const getUserById = async (req, res) => {\n+const getOneUser = async (req, res) => {\n   const { id } = req.params;\n   const user = await usersService.getUser(id);\n \n   if (!user) {\n@@ -18,9 +18,9 @@\n \n   res.status(200).send(user);\n };\n \n-const createNewUser = async (req, res) => {\n+const addUser = async (req, res) => {\n   const { name } = req.body;\n \n   if (!name) {\n     res.sendStatus(400);\n@@ -32,9 +32,9 @@\n \n   res.status(201).send(newUser);\n };\n \n-const updateUserById = async (req, res) => {\n+const updateUser = async (req, res) => {\n   const { id } = req.params;\n   const { name } = req.body;\n   const user = await usersService.getUser(id);\n \n@@ -48,9 +48,9 @@\n \n   res.status(200).send(updatedUser);\n };\n \n-const deleteUserById = async (req, res) => {\n+const deleteUser = async (req, res) => {\n   const { id } = req.params;\n   const user = await usersService.getUser(id);\n \n   if (!user) {\n@@ -64,9 +64,9 @@\n };\n \n module.exports = {\n   getAllUsers,\n-  getUserById,\n-  createNewUser,\n-  updateUserById,\n-  deleteUserById,\n+  getOneUser,\n+  addUser,\n+  updateUser,\n+  deleteUser,\n };\n"
                },
                {
                    "date": 1718795305889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const usersService = require('../services/users.service');\n \n-const getAllUsers = async (req, res) => {\n+const getAllUsers = async (_req, res) => {\n   const users = await usersService.getUsers();\n \n   res.send(users);\n };\n"
                },
                {
                    "date": 1718795359170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,14 @@\n const usersService = require('../services/users.service');\n \n const getAllUsers = async (_req, res) => {\n-  const users = await usersService.getUsers();\n+  try {\n+    const users = await usersService.getUsers();\n \n-  res.send(users);\n+    res.send(users);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n };\n \n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718795512245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,17 +11,20 @@\n };\n \n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n-  const user = await usersService.getUser(id);\n \n-  if (!user) {\n-    res.sendStatus(404);\n+  try {\n+    const user = await userService.getUser(+id);\n \n-    return;\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (e) {\n+    res.status(400).send(e.message);\n   }\n-\n-  res.status(200).send(user);\n };\n \n const addUser = async (req, res) => {\n   const { name } = req.body;\n"
                },
                {
                    "date": 1718795525171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n const getOneUser = async (req, res) => {\n   const { id } = req.params;\n \n   try {\n-    const user = await userService.getUser(+id);\n+    const user = await usersService.getUser(+id);\n \n     if (user) {\n       res.send(user);\n     } else {\n"
                },
                {
                    "date": 1718795578703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,19 +26,17 @@\n   }\n };\n \n const addUser = async (req, res) => {\n-  const { name } = req.body;\n+  const userData = req.body;\n \n-  if (!name) {\n-    res.sendStatus(400);\n+  try {\n+    const user = await userService.createUser(userData);\n \n-    return;\n+    res.status(201).send(user);\n+  } catch (e) {\n+    res.status(400).send(e.message);\n   }\n-\n-  const newUser = await usersService.createUser(name);\n-\n-  res.status(201).send(newUser);\n };\n \n const updateUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718795586303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n const addUser = async (req, res) => {\n   const userData = req.body;\n \n   try {\n-    const user = await userService.createUser(userData);\n+    const user = await usersService.createUser(userData);\n \n     res.status(201).send(user);\n   } catch (e) {\n     res.status(400).send(e.message);\n"
                },
                {
                    "date": 1718795601681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,17 +26,19 @@\n   }\n };\n \n const addUser = async (req, res) => {\n-  const userData = req.body;\n+  const { name } = req.body;\n \n-  try {\n-    const user = await usersService.createUser(userData);\n+  if (!name) {\n+    res.sendStatus(400);\n \n-    res.status(201).send(user);\n-  } catch (e) {\n-    res.status(400).send(e.message);\n+    return;\n   }\n+\n+  const newUser = await usersService.createUser(name);\n+\n+  res.status(201).send(newUser);\n };\n \n const updateUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718795766118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,19 +26,25 @@\n   }\n };\n \n const addUser = async (req, res) => {\n-  const { name } = req.body;\n+  try {\n+    const { name } = req.body;\n \n-  if (!name) {\n-    res.sendStatus(400);\n-\n-    return;\n+    if (name) {\n+      const newUser = await usersService.createUser(name);\n+      res.status(201).send(newUser);\n+    }\n+  } catch (error) {\n+    res.status(400).send(error.message);\n   }\n+  // if (!name) {\n+  //   res.sendStatus(400);\n \n-  const newUser = await usersService.createUser(name);\n+  //   return;\n+  // }\n \n-  res.status(201).send(newUser);\n+  // res.status(201).send(newUser);\n };\n \n const updateUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718795844061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,13 +28,11 @@\n \n const addUser = async (req, res) => {\n   try {\n     const { name } = req.body;\n+    const newUser = await usersService.createUser(name);\n \n-    if (name) {\n-      const newUser = await usersService.createUser(name);\n-      res.status(201).send(newUser);\n-    }\n+    res.status(201).send(newUser);\n   } catch (error) {\n     res.status(400).send(error.message);\n   }\n   // if (!name) {\n"
                },
                {
                    "date": 1718795856963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,11 @@\n \n const addUser = async (req, res) => {\n   try {\n     const { name } = req.body;\n-    const newUser = await usersService.createUser(name);\n+    const user = await usersService.createUser(name);\n \n-    res.status(201).send(newUser);\n+    res.status(201).send(user);\n   } catch (error) {\n     res.status(400).send(error.message);\n   }\n   // if (!name) {\n"
                },
                {
                    "date": 1718795870216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,15 +34,8 @@\n     res.status(201).send(user);\n   } catch (error) {\n     res.status(400).send(error.message);\n   }\n-  // if (!name) {\n-  //   res.sendStatus(400);\n-\n-  //   return;\n-  // }\n-\n-  // res.status(201).send(newUser);\n };\n \n const updateUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718796063026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,20 +38,21 @@\n };\n \n const updateUser = async (req, res) => {\n   const { id } = req.params;\n-  const { name } = req.body;\n-  const user = await usersService.getUser(id);\n+  const userData = req.body;\n \n-  if (!user) {\n-    res.sendStatus(404);\n+  try {\n+    const user = await userService.updateUser(+id, userData);\n \n-    return;\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (e) {\n+    res.status(400).send(e.message);\n   }\n-\n-  const updatedUser = await usersService.updateUser({ id, name });\n-\n-  res.status(200).send(updatedUser);\n };\n \n const deleteUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718796076638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+const usersService = require('../services/users.service');\n+\n+const getAllUsers = async (_req, res) => {\n+  try {\n+    const users = await usersService.getUsers();\n+\n+    res.send(users);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const getOneUser = async (req, res) => {\n+  const { id } = req.params;\n+\n+  try {\n+    const user = await usersService.getUser(+id);\n+\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (e) {\n+    res.status(400).send(e.message);\n+  }\n+};\n+\n+const addUser = async (req, res) => {\n+  try {\n+    const { name } = req.body;\n+    const user = await usersService.createUser(name);\n+\n+    res.status(201).send(user);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const updateUser = async (req, res) => {\n+  const { id } = req.params;\n+  const userData = req.body;\n+\n+  try {\n+    const user = await usersService.updateUser(+id, userData);\n+\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (e) {\n+    res.status(400).send(e.message);\n+  }\n+};\n+\n+const deleteUser = async (req, res) => {\n+  const { id } = req.params;\n+  const user = await usersService.getUser(id);\n+\n+  if (!user) {\n+    res.sendStatus(404);\n+\n+    return;\n+  }\n+\n+  usersService.deleteUser(user.id);\n+  res.sendStatus(204);\n+};\n+\n+module.exports = {\n+  getAllUsers,\n+  getOneUser,\n+  addUser,\n+  updateUser,\n+  deleteUser,\n+};\n"
                },
                {
                    "date": 1718796410060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,100 +38,22 @@\n };\n \n const updateUser = async (req, res) => {\n   const { id } = req.params;\n-  const userData = req.body;\n-\n-  try {\n-    const user = await usersService.updateUser(+id, userData);\n-\n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (e) {\n-    res.status(400).send(e.message);\n-  }\n-};\n-\n-const deleteUser = async (req, res) => {\n-  const { id } = req.params;\n+  const { name } = req.body;\n   const user = await usersService.getUser(id);\n \n   if (!user) {\n     res.sendStatus(404);\n \n     return;\n   }\n \n-  usersService.deleteUser(user.id);\n-  res.sendStatus(204);\n-};\n+  const updatedUser = await usersService.updateUser({ id, name });\n \n-module.exports = {\n-  getAllUsers,\n-  getOneUser,\n-  addUser,\n-  updateUser,\n-  deleteUser,\n+  res.status(200).send(updatedUser);\n };\n-const usersService = require('../services/users.service');\n \n-const getAllUsers = async (_req, res) => {\n-  try {\n-    const users = await usersService.getUsers();\n-\n-    res.send(users);\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n-\n-const getOneUser = async (req, res) => {\n-  const { id } = req.params;\n-\n-  try {\n-    const user = await usersService.getUser(+id);\n-\n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (e) {\n-    res.status(400).send(e.message);\n-  }\n-};\n-\n-const addUser = async (req, res) => {\n-  try {\n-    const { name } = req.body;\n-    const user = await usersService.createUser(name);\n-\n-    res.status(201).send(user);\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n-\n-const updateUser = async (req, res) => {\n-  const { id } = req.params;\n-  const userData = req.body;\n-\n-  try {\n-    const user = await userService.updateUser(+id, userData);\n-\n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (e) {\n-    res.status(400).send(e.message);\n-  }\n-};\n-\n const deleteUser = async (req, res) => {\n   const { id } = req.params;\n   const user = await usersService.getUser(id);\n \n"
                },
                {
                    "date": 1718796545672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,21 +37,36 @@\n   }\n };\n \n const updateUser = async (req, res) => {\n+  // const { id } = req.params;\n+  // const { name } = req.body;\n+  // const user = await usersService.getUser(id);\n+\n+  // if (!user) {\n+  //   res.sendStatus(404);\n+\n+  //   return;\n+  // }\n+\n+  // const updatedUser = await usersService.updateUser({ id, name });\n+\n+  // res.status(200).send(updatedUser);\n+\n   const { id } = req.params;\n   const { name } = req.body;\n-  const user = await usersService.getUser(id);\n \n-  if (!user) {\n-    res.sendStatus(404);\n+  try {\n+    const user = await usersService.updateUser(+id, { name });\n \n-    return;\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (error) {\n+    res.status(400).send(error.message);\n   }\n-\n-  const updatedUser = await usersService.updateUser({ id, name });\n-\n-  res.status(200).send(updatedUser);\n };\n \n const deleteUser = async (req, res) => {\n   const { id } = req.params;\n"
                },
                {
                    "date": 1718796813641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+const usersService = require('../services/users.service');\n+\n+const getAllUsers = async (_req, res) => {\n+  try {\n+    const users = await usersService.getUsers();\n+\n+    res.send(users);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const getOneUser = async (req, res) => {\n+  const { id } = req.params;\n+\n+  try {\n+    const user = await usersService.getUser(+id);\n+\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (e) {\n+    res.status(400).send(e.message);\n+  }\n+};\n+\n+const addUser = async (req, res) => {\n+  try {\n+    const { name } = req.body;\n+    const user = await usersService.createUser(name);\n+\n+    res.status(201).send(user);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const updateUser = async (req, res) => {\n+  // const { id } = req.params;\n+  // const { name } = req.body;\n+  // const user = await usersService.getUser(id);\n+\n+  // if (!user) {\n+  //   res.sendStatus(404);\n+\n+  //   return;\n+  // }\n+\n+  // const updatedUser = await usersService.updateUser({ id, name });\n+\n+  // res.status(200).send(updatedUser);\n+\n+  const { id } = req.params;\n+  const { name } = req.body;\n+\n+  try {\n+    const user = await usersService.getUser(+id, name);\n+\n+    if (!user) {\n+      return res.sendStatus(404);\n+    }\n+\n+    if (user) {\n+      res.send(user);\n+    } else {\n+      res.sendStatus(404);\n+    }\n+  } catch (error) {\n+    res.status(400).send(error.message);\n+  }\n+};\n+\n+const deleteUser = async (req, res) => {\n+  const { id } = req.params;\n+  const user = await usersService.getUser(id);\n+\n+  if (!user) {\n+    res.sendStatus(404);\n+\n+    return;\n+  }\n+\n+  usersService.deleteUser(user.id);\n+  res.sendStatus(204);\n+};\n+\n+module.exports = {\n+  getAllUsers,\n+  getOneUser,\n+  addUser,\n+  updateUser,\n+  deleteUser,\n+};\n"
                },
                {
                    "date": 1718796847594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,109 +61,16 @@\n     if (!user) {\n       return res.sendStatus(404);\n     }\n \n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n+    const updatedUser = await usersService.updateUser({ id: Number(id), name });\n \n-const deleteUser = async (req, res) => {\n-  const { id } = req.params;\n-  const user = await usersService.getUser(id);\n-\n-  if (!user) {\n-    res.sendStatus(404);\n-\n-    return;\n-  }\n-\n-  usersService.deleteUser(user.id);\n-  res.sendStatus(204);\n-};\n-\n-module.exports = {\n-  getAllUsers,\n-  getOneUser,\n-  addUser,\n-  updateUser,\n-  deleteUser,\n-};\n-const usersService = require('../services/users.service');\n-\n-const getAllUsers = async (_req, res) => {\n-  try {\n-    const users = await usersService.getUsers();\n-\n-    res.send(users);\n+    return res.status(200).send(updatedUser);\n   } catch (error) {\n     res.status(400).send(error.message);\n   }\n };\n \n-const getOneUser = async (req, res) => {\n-  const { id } = req.params;\n-\n-  try {\n-    const user = await usersService.getUser(+id);\n-\n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (e) {\n-    res.status(400).send(e.message);\n-  }\n-};\n-\n-const addUser = async (req, res) => {\n-  try {\n-    const { name } = req.body;\n-    const user = await usersService.createUser(name);\n-\n-    res.status(201).send(user);\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n-\n-const updateUser = async (req, res) => {\n-  // const { id } = req.params;\n-  // const { name } = req.body;\n-  // const user = await usersService.getUser(id);\n-\n-  // if (!user) {\n-  //   res.sendStatus(404);\n-\n-  //   return;\n-  // }\n-\n-  // const updatedUser = await usersService.updateUser({ id, name });\n-\n-  // res.status(200).send(updatedUser);\n-\n-  const { id } = req.params;\n-  const { name } = req.body;\n-\n-  try {\n-    const user = await usersService.updateUser(+id, { name });\n-\n-    if (user) {\n-      res.send(user);\n-    } else {\n-      res.sendStatus(404);\n-    }\n-  } catch (error) {\n-    res.status(400).send(error.message);\n-  }\n-};\n-\n const deleteUser = async (req, res) => {\n   const { id } = req.params;\n   const user = await usersService.getUser(id);\n \n"
                },
                {
                    "date": 1718797064006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,22 +37,8 @@\n   }\n };\n \n const updateUser = async (req, res) => {\n-  // const { id } = req.params;\n-  // const { name } = req.body;\n-  // const user = await usersService.getUser(id);\n-\n-  // if (!user) {\n-  //   res.sendStatus(404);\n-\n-  //   return;\n-  // }\n-\n-  // const updatedUser = await usersService.updateUser({ id, name });\n-\n-  // res.status(200).send(updatedUser);\n-\n   const { id } = req.params;\n   const { name } = req.body;\n \n   try {\n@@ -74,11 +60,9 @@\n   const { id } = req.params;\n   const user = await usersService.getUser(id);\n \n   if (!user) {\n-    res.sendStatus(404);\n-\n-    return;\n+    return res.sendStatus(404);\n   }\n \n   usersService.deleteUser(user.id);\n   res.sendStatus(204);\n"
                },
                {
                    "date": 1718797099474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,16 +57,21 @@\n };\n \n const deleteUser = async (req, res) => {\n   const { id } = req.params;\n-  const user = await usersService.getUser(id);\n \n-  if (!user) {\n-    return res.sendStatus(404);\n+  try {\n+    const user = await usersService.getUser(id);\n+\n+    if (!user) {\n+      return res.sendStatus(404);\n+    }\n+\n+    usersService.deleteUser(user.id);\n+    res.sendStatus(204);\n+  } catch (error) {\n+    res.status(400).send(error.message);\n   }\n-\n-  usersService.deleteUser(user.id);\n-  res.sendStatus(204);\n };\n \n module.exports = {\n   getAllUsers,\n"
                }
            ],
            "date": 1718790011917,
            "name": "Commit-0",
            "content": "const userService = require('../services/users.service');\n\nconst getAllUsers = async (_req, res) => {\n  const users = await userService.getUsers();\n\n  res.send(users);\n};\n\nconst getOneUser = async (req, res) => {\n  const { id } = req.params;\n  const user = await userService.getUser(+id);\n\n  if (user) {\n    res.send(user);\n  } else {\n    res.sendStatus(404);\n  }\n};\n\nconst addUser = async (req, res) => {\n  const userData = req.body;\n\n  try {\n    const user = await userService.addUser(userData);\n\n    res.status(201).send(user);\n  } catch (error) {\n    res.status(400).send(error.message);\n  }\n};\n\nconst updateUser = (req, res) => {\n  const { id } = req.params;\n  const userData = req.body;\n\n  try {\n    const user = userService.updateUser(+id, userData);\n\n    if (!user) {\n      res.sendStatus(404);\n\n      return;\n    }\n\n    res.send(user);\n  } catch (error) {\n    res.statusMessage(error.message).sendStatus(400);\n  }\n};\n\nconst deleteUser = (req, res) => {\n  const { id } = req.params;\n\n  const didDelete = userService.deleteUser(+id);\n\n  if (didDelete) {\n    res.sendStatus(204);\n  } else {\n    res.sendStatus(404);\n  }\n};\n\nmodule.exports = {\n  getAllUsers,\n  getOneUser,\n  addUser,\n  deleteUser,\n  updateUser,\n};\n"
        }
    ]
}